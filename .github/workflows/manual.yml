# This is a basic workflow that is manually triggered

name: TestUser

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

       # list contents or directory
      - name: List contents
        run: ls
      # Compile Message.java and MethodDefinitions.java with their test classes
      - name: Compile classes
        working-directory: ./src
        run: |
          javac -cp "../testresources/junit-platform-console-standalone-1.6.0.jar" \
          ./chatvista6/Message.java \
          ./chatvista6/MethodDefinitions.java \
          ../test/chatvista6/MessageTest.java \
          ../test/chatvista6/MethodDefinitionsTest.java
      - name: List contents of src/chatvista6 after compile
        working-directory: ./src/chatvista6
        run: ls

      # Copy compiled classes to test directory
      - name: Copy compiled source classes to test directory
        working-directory: ./src/chatvista6
        run: |
          cp -t "../../test/chatvista6" Message.class
          cp -t "../../test/chatvista6" MethodDefinitions.class
      - name: Copy compiled test classes to test directory
        working-directory: ./test/chatvista6
        run: |
          cp -t "../../test" MessageTest.class
          cp -t "../../test" MethodDefinitionsTest.class
      - name: List contents of test/chatvista6 directory
        working-directory: ./test/chatvista6
        run: ls

      # Run both test classes
      - name: Run JUnit tests for MessageTest and MethodDefinitionsTest
        working-directory: ./test
        run: |
          ls
          java -jar "../testresources/junit-platform-console-standalone-1.6.0.jar" \
          -cp "." \
          --select-class chatvista6.MessageTest \
          --select-class chatvista6.MethodDefinitionsTest
